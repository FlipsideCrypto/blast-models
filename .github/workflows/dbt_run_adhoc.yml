name: dbt_run_adhoc
run-name: ${{ inputs.dbt_command }}

on:
  workflow_dispatch:
    branches:
      - "main"
    inputs:
      environment:
        type: choice 
        description: DBT Run Environment
        required: true
        options:
          - dev
          - prod
        default: dev
      warehouse:
        type: choice 
        description: Snowflake warehouse
        required: true 
        options:
          - DBT
          - DBT_CLOUD
          - DBT_EMERGENCY
        default: DBT
      dbt_command:
        type: string
        description: 'DBT Run Command'
        required: true
    
env:
  DBT_PROFILES_DIR: ./

  ACCOUNT: "${{ vars.ACCOUNT }}"
  ROLE: "${{ vars.ROLE }}"
  USER: "${{ vars.USER }}"
  PASSWORD: "${{ secrets.PASSWORD }}"
  REGION: "${{ vars.REGION }}"
  DATABASE: "${{ vars.DATABASE }}"
  WAREHOUSE: "${{ inputs.warehouse }}"
  SCHEMA: "${{ vars.SCHEMA }}"

concurrency:
  group: ${{ github.workflow }}

jobs:
  run_dbt_jobs:
    runs-on: ubuntu-latest
    environment: 
      name: workflow_prod

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: install dependencies
        run: |
          pip install -r requirements.txt
          dbt deps
      
      - name: refresh ddl for datashare
        run: |
          cnt=$(dbt ls -m fsc_utils.datashare._datashare___create_gold | wc -l ); if [ $cnt -eq 1 ]; then dbt run -m fsc_utils.datashare._datashare___create_gold; fi; 
      - name: checkout docs branch
        run: |
          git checkout -B docs origin/main
      - name: generate dbt docs
        run: dbt docs generate -t prod

      - name: move files to docs directory
        run: |
          mkdir -p ./docs
          cp target/{catalog.json,manifest.json,index.html} docs/
      - name: clean up target directory
        run: dbt clean

      - name: check for changes
        run: git status

      - name: stage changed files
        run: git add .

      - name: commit changed files
        run: |
          git config user.email "abc@xyz"
          git config user.name "github-actions"
          git commit -am "Auto-update docs"
      - name: push changes to docs
        run: |
          git push -f --set-upstream origin docs